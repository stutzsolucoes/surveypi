// Generated by CoffeeScript 1.7.1
(function() {
  stutzSurveyApp.controller('HomeController', [
    '$http', function($http) {
      var home;
      home = this;
      this.ajaxStatus = 0;
      this.answear = {
        customAttributes: {}
      };
      $http.get(stutzSurveyApp.apiURL + '/opened_survey/53e84dee8e332be419f63148').success(function(data, status, headers, config) {
        var option, surveyQuestion, _i, _len, _ref, _results;
        home.survey = data;
        _ref = home.survey.questions;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          surveyQuestion = _ref[_i];
          surveyQuestion.question.answear = [];
          _results.push((function() {
            var _j, _len1, _ref1, _results1;
            _ref1 = surveyQuestion.question.options;
            _results1 = [];
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              option = _ref1[_j];
              _results1.push(surveyQuestion.question.answear.push({
                "option": option,
                checked: false
              }));
            }
            return _results1;
          })());
        }
        return _results;
      }).error(function(data, status, headers, config) {
        home.survey = null;
        return console.log(status);
      });
      this.submitSurvey = function() {
        var surveyQuestion, _i, _len, _ref;
        home.answear.survey_id = home.survey._id;
        home.answear.questions = [];
        _ref = home.survey.questions;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          surveyQuestion = _ref[_i];
          home.answear.questions.push({
            "question_id": surveyQuestion.question._id,
            "answear": surveyQuestion.question.answear
          });
        }
        home.ajaxStatus = 1;
        $http.post(stutzSurveyApp.apiURL + '/opened_survey/answear', home.answear).success(function(data, status, headers, config, statusText) {
          return home.ajaxStatus = 0;
        }).error(function(data, status, headers, config, statusText) {
          return home.ajaxStatus = -1;
        });
      };
    }
  ]);

}).call(this);
